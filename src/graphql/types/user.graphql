scalar Date
scalar Boolean

type Query {
  user(id: ID!): UserQueryResolverReturnType!
  activeUser: UserQueryResolverReturnType!
  users: [User!]
}

type User {
  id: ID!
  name: String!
  surname: String!
  username: String!
  email: String!
  password: String!
  gender: String!
  createdAt: Date!
  admin: Boolean
  comments: [Comment!]
  blogs: [Blog!]
}

type UserQueryResolverReturnType {
  user: User
  errorMessage: String!
}

type UserMutationResolverReturnType {
  token: Token!
  errorMessage: String!
}

type Mutation {
  register(data: registerInput!): UserMutationResolverReturnType!
  login(data: loginInput!): UserMutationResolverReturnType!
}

input registerInput {
  name: String!
  surname: String!
  username: String!
  email: String!
  password: String!
  gender: String!
  admin: Boolean
}

input loginInput {
  username: String!
  password: String!
}
